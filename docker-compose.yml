version: '3.8'

services:
  db:
    image: postgres:16-alpine
    container_name: movielist-db
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-movielist}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-movielist_password}
      POSTGRES_DB: ${POSTGRES_DB:-movielist}
    ports:
      - '${POSTGRES_PORT:-5432}:5432'
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - movielist-network
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U ${POSTGRES_USER:-movielist}']
      interval: 10s
      timeout: 5s
      retries: 5

  web:
    build:
      context: .
      dockerfile: Dockerfile
      target: ${BUILD_TARGET:-runner}
    container_name: movielist-app
    restart: unless-stopped
    ports:
      - '${APP_PORT:-3000}:3000'
    environment:
      - DATABASE_URL=${DATABASE_URL:-postgresql://movielist:movielist_password@db:5432/movielist}
      - JWT_SECRET=${JWT_SECRET:-your-super-secret-jwt-key-change-in-production}
      - NODE_ENV=${NODE_ENV:-production}
    networks:
      - movielist-network
    depends_on:
      db:
        condition: service_healthy
    command: sh -c "pnpm prisma migrate deploy && node .output/server/index.mjs"
    healthcheck:
      test:
        [
          'CMD',
          'node',
          '-e',
          "require('http').get('http://localhost:3000/api/health', (r) => {process.exit(r.statusCode === 200 ? 0 : 1)})",
        ]
      interval: 30s
      timeout: 3s
      start_period: 40s
      retries: 3

volumes:
  postgres_data:
    driver: local

networks:
  movielist-network:
    driver: bridge
